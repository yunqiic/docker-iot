authentication = [
  {
    backend = "built_in_database"
    mechanism = "password_based"
    password_hash_algorithm {name = "sha256", salt_position = "suffix"}
    user_id_type = "username"
  }
]
bridges {
  mqtt {
    test {
      bridge_mode = false
      clean_start = true
      egress {
        remote {payload = "{\n \"device\": \"root.sg.${clientid}\",\n \"timestamp\": ${now_ts_ms},\n \"measurements\": [\n   \"bar\"\n ],\n \"values\": [\n
 ${bar}\n ]\n}", topic = "test"}
      }
      enable = true
      ingress {
        local {
          payload = "${payload}"
          qos = 1
          retain = false
        }
        remote {qos = 1, topic = "t/#"}
      }
      keepalive = "60s"
      max_inflight = 32
      mode = "cluster_shareload"
      password = "root"
      proto_ver = "v4"
      reconnect_interval = "15s"
      resource_opts {
        async_inflight_window = 100
        auto_restart_interval = "60s"
        health_check_interval = "15s"
        max_queue_bytes = "1GB"
        query_mode = "sync"
        worker_pool_size = 4
      }
      retry_interval = "15s"
      server = "172.21.16.11:2883"
      ssl {
        ciphers = []
        depth = 10
        enable = false
        reuse_sessions = true
        secure_renegotiate = true
        user_lookup_fun = "emqx_tls_psk:lookup"
        verify = "verify_peer"
        versions = ["tlsv1.3", "tlsv1.2", "tlsv1.1", "tlsv1"]
      }
      username = "root"
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  jq_implementation_module = "jq_nif"
  rules {
    "rule_7v42" {
      actions = ["mqtt:test"]
      description = ""
      metadata {created_at = 1674902787156}
      sql = "SELECT\n    clientid,\n    now_timestamp('millisecond') as now_ts_ms,\n    payload.bar as bar\nFROM\n    \"t/#\""
    }
  }
}